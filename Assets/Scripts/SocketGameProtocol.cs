// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SocketGameProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SocketGameProtocol {

  /// <summary>Holder for reflection information generated from SocketGameProtocol.proto</summary>
  public static partial class SocketGameProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for SocketGameProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SocketGameProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTb2NrZXRHYW1lUHJvdG9jb2wucHJvdG8SElNvY2tldEdhbWVQcm90b2Nv",
            "bCK/BAoITWFpblBhY2sSNAoLcmVxdWVzdGNvZGUYASABKA4yHy5Tb2NrZXRH",
            "YW1lUHJvdG9jb2wuUmVxdWVzdENvZGUSMgoKYWN0aW9uY29kZRgCIAEoDjIe",
            "LlNvY2tldEdhbWVQcm90b2NvbC5BY3Rpb25Db2RlEjIKCnJldHVybmNvZGUY",
            "AyABKA4yHi5Tb2NrZXRHYW1lUHJvdG9jb2wuUmV0dXJuQ29kZRIwCglsb2dp",
            "bnBhY2sYBCABKAsyHS5Tb2NrZXRHYW1lUHJvdG9jb2wuTG9naW5QYWNrEgsK",
            "A3N0chgFIAEoCRIuCghyb29tcGFjaxgGIAMoCzIcLlNvY2tldEdhbWVQcm90",
            "b2NvbC5Sb29tUGFjaxIyCgpwbGF5ZXJwYWNrGAcgAygLMh4uU29ja2V0R2Ft",
            "ZVByb3RvY29sLlBsYXllclBhY2sSMgoKYnVsbGV0cGFjaxgIIAEoCzIeLlNv",
            "Y2tldEdhbWVQcm90b2NvbC5CdWxsZXRQYWNrEgwKBHVzZXIYCSABKAkSOAoN",
            "YnVsbGV0aGl0cGFjaxgKIAEoCzIhLlNvY2tldEdhbWVQcm90b2NvbC5CdWxs",
            "ZXRIaXRQYWNrEkAKEXJlc3RvcmViZWluZ3NwYWNrGAsgAygLMiUuU29ja2V0",
            "R2FtZVByb3RvY29sLlJlc3RvcmVCZWluZ3NQYWNrEjQKC3Jlc3RvcmVwYWNr",
            "GAwgASgLMh8uU29ja2V0R2FtZVByb3RvY29sLlJlc3RvcmVQYWNrIi8KCUxv",
            "Z2luUGFjaxIQCgh1c2VybmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSJ5",
            "CghSb29tUGFjaxIQCghyb29tbmFtZRgBIAEoCRIOCgZtYXhudW0YAiABKAUS",
            "DgoGY3VybnVtGAMgASgFEg0KBXN0YXRlGAQgASgFEiwKB21hcHR5cGUYBSAB",
            "KA4yGy5Tb2NrZXRHYW1lUHJvdG9jb2wuTWFwVHlwZSKUAQoKUGxheWVyUGFj",
            "axISCgpwbGF5ZXJuYW1lGAEgASgJEhAKCHBsYXllcklEGAIgASgJEgoKAmhw",
            "GAMgASgFEiwKB3Bvc3BhY2sYBCABKAsyGy5Tb2NrZXRHYW1lUHJvdG9jb2wu",
            "UG9zUGFjaxIQCghTcGF3blBvcxgFIAEoBRIUCgxDaGFyQXR0clR5cGUYBiAB",
            "KAUifwoHUG9zUGFjaxIMCgRQb3NYGAEgASgCEgwKBFBvc1kYAiABKAISDAoE",
            "UG9zWhgDIAEoAhIMCgRSb3RYGAQgASgCEgwKBFJvdFkYBSABKAISDAoEUm90",
            "WhgGIAEoAhIRCglNb3ZlU3BlZWQYByABKAISDQoFU3RhdGUYCCABKAkihgEK",
            "CkJ1bGxldFBhY2sSDAoEUG9zWBgBIAEoAhIMCgRQb3NZGAIgASgCEgwKBFBv",
            "c1oYAyABKAISDAoEUm90WBgEIAEoAhIMCgRSb3RZGAUgASgCEjIKCmJ1bGxl",
            "dHR5cGUYBiABKA4yHi5Tb2NrZXRHYW1lUHJvdG9jb2wuQnVsbGV0VHlwZSJ+",
            "Cg1CdWxsZXRIaXRQYWNrEgwKBFBvc1gYASABKAISDAoEUG9zWRgCIAEoAhIM",
            "CgRQb3NaGAMgASgCEg8KB0hpdHVzZXIYBCABKAkSMgoKYnVsbGV0dHlwZRgF",
            "IAEoDjIeLlNvY2tldEdhbWVQcm90b2NvbC5CdWxsZXRUeXBlIlgKEVJlc3Rv",
            "cmVCZWluZ3NQYWNrEg0KBWluZGV4GAEgASgFEjQKC3Jlc3RvcmV0eXBlGAIg",
            "ASgOMh8uU29ja2V0R2FtZVByb3RvY29sLlJlc3RvcmVUeXBlIlEKC1Jlc3Rv",
            "cmVQYWNrEgwKBHVzZXIYASABKAkSNAoLcmVzdG9yZXR5cGUYAiABKA4yHy5T",
            "b2NrZXRHYW1lUHJvdG9jb2wuUmVzdG9yZVR5cGUqPAoLUmVxdWVzdENvZGUS",
            "DwoLUmVxdWVzdE5vbmUQABIICgRVc2VyEAESCAoEUm9vbRACEggKBEdhbWUQ",
            "AyrpAgoKQWN0aW9uQ29kZRIOCgpBY3Rpb25Ob25lEAASCQoFTG9nb24QARIJ",
            "CgVMb2dpbhACEg4KCkNyZWF0ZVJvb20QAxIMCghGaW5kUm9vbRAEEg4KClBs",
            "YXllckxpc3QQBRIMCghKb2luUm9vbRAGEggKBEV4aXQQBxIICgRDaGF0EAgS",
            "DQoJU3RhcnRHYW1lEAkSDAoIU3RhcnRpbmcQChIJCgVVcFBvcxALEgwKCEV4",
            "aXRHYW1lEAwSEwoPVXBDaGFyYWN0ZXJMaXN0EA0SCAoERmlyZRAOEgcKA0hp",
            "dBAPEgoKBkRhbWFnZRAQEggKBERlYWQQERIQCgxDaGFyQXR0clR5cGUQEhIS",
            "Cg5VbHRFeHRyYURhbWFnZRATEgsKB1Jlc3RvcmUQFBIQCgxTcGF3blJlc3Rv",
            "cmUQFRISCg5EZXN0cm95UmVzdG9yZRAWEgwKCEdhbWVPdmVyEBcSCgoGTG9n",
            "b3V0EBgqZAoKUmV0dXJuQ29kZRIOCgpSZXR1cm5Ob25lEAASCwoHU3VjY2Vl",
            "ZBABEggKBEZhaWwQAhIQCgxBbHJlYWR5TG9naW4QAxIQCgxBbHJlYWR5TG9n",
            "b24QBBILCgdOb3RSb29tEAUqQQoHTWFwVHlwZRILCgdNYXBOb25lEAASCgoG",
            "Rm9yZXN0EAESDAoITW91bnRhaW4QAhIPCgtZZWxsb3dTdG9uZRADKnUKCkJ1",
            "bGxldFR5cGUSDgoKQnVsbGV0Tm9uZRAAEg4KCkZpcmVBdHRhY2sQARINCglJ",
            "Y2VBdHRhY2sQAhIQCgxQb2lzb25BdHRhY2sQAxILCgdGaXJlVWx0EAQSCgoG",
            "SWNlVWx0EAUSDQoJUG9pc29uVWx0EAYqWAoLUmVzdG9yZVR5cGUSDwoLUmVz",
            "dG9yZU5vbmUQABIOCgpTbWFsbEJsb29kEAESDAoIQmlnQmxvb2QQAhINCglT",
            "bWFsbEJsdWUQAxILCgdCaWdCbHVlEARiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SocketGameProtocol.RequestCode), typeof(global::SocketGameProtocol.ActionCode), typeof(global::SocketGameProtocol.ReturnCode), typeof(global::SocketGameProtocol.MapType), typeof(global::SocketGameProtocol.BulletType), typeof(global::SocketGameProtocol.RestoreType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.MainPack), global::SocketGameProtocol.MainPack.Parser, new[]{ "Requestcode", "Actioncode", "Returncode", "Loginpack", "Str", "Roompack", "Playerpack", "Bulletpack", "User", "Bullethitpack", "Restorebeingspack", "Restorepack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.LoginPack), global::SocketGameProtocol.LoginPack.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.RoomPack), global::SocketGameProtocol.RoomPack.Parser, new[]{ "Roomname", "Maxnum", "Curnum", "State", "Maptype" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.PlayerPack), global::SocketGameProtocol.PlayerPack.Parser, new[]{ "Playername", "PlayerID", "Hp", "Pospack", "SpawnPos", "CharAttrType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.PosPack), global::SocketGameProtocol.PosPack.Parser, new[]{ "PosX", "PosY", "PosZ", "RotX", "RotY", "RotZ", "MoveSpeed", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.BulletPack), global::SocketGameProtocol.BulletPack.Parser, new[]{ "PosX", "PosY", "PosZ", "RotX", "RotY", "Bullettype" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.BulletHitPack), global::SocketGameProtocol.BulletHitPack.Parser, new[]{ "PosX", "PosY", "PosZ", "Hituser", "Bullettype" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.RestoreBeingsPack), global::SocketGameProtocol.RestoreBeingsPack.Parser, new[]{ "Index", "Restoretype" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.RestorePack), global::SocketGameProtocol.RestorePack.Parser, new[]{ "User", "Restoretype" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestCode {
    [pbr::OriginalName("RequestNone")] RequestNone = 0,
    /// <summary>
    /// 用户
    /// </summary>
    [pbr::OriginalName("User")] User = 1,
    /// <summary>
    /// 房间
    /// </summary>
    [pbr::OriginalName("Room")] Room = 2,
    /// <summary>
    /// 游戏
    /// </summary>
    [pbr::OriginalName("Game")] Game = 3,
  }

  public enum ActionCode {
    [pbr::OriginalName("ActionNone")] ActionNone = 0,
    /// <summary>
    /// 注册
    /// </summary>
    [pbr::OriginalName("Logon")] Logon = 1,
    /// <summary>
    /// 登录
    /// </summary>
    [pbr::OriginalName("Login")] Login = 2,
    /// <summary>
    /// 创建房间
    /// </summary>
    [pbr::OriginalName("CreateRoom")] CreateRoom = 3,
    /// <summary>
    /// 查询房间
    /// </summary>
    [pbr::OriginalName("FindRoom")] FindRoom = 4,
    /// <summary>
    /// 玩家列表
    /// </summary>
    [pbr::OriginalName("PlayerList")] PlayerList = 5,
    /// <summary>
    /// 加入房间
    /// </summary>
    [pbr::OriginalName("JoinRoom")] JoinRoom = 6,
    /// <summary>
    /// 离开
    /// </summary>
    [pbr::OriginalName("Exit")] Exit = 7,
    /// <summary>
    /// 聊天
    /// </summary>
    [pbr::OriginalName("Chat")] Chat = 8,
    /// <summary>
    /// 开始游戏
    /// </summary>
    [pbr::OriginalName("StartGame")] StartGame = 9,
    /// <summary>
    /// 服务端发的开始游戏请求
    /// </summary>
    [pbr::OriginalName("Starting")] Starting = 10,
    /// <summary>
    /// 更新位置
    /// </summary>
    [pbr::OriginalName("UpPos")] UpPos = 11,
    /// <summary>
    /// 离开游戏
    /// </summary>
    [pbr::OriginalName("ExitGame")] ExitGame = 12,
    /// <summary>
    /// 更新角色和玩家列表
    /// </summary>
    [pbr::OriginalName("UpCharacterList")] UpCharacterList = 13,
    /// <summary>
    /// 开火
    /// </summary>
    [pbr::OriginalName("Fire")] Fire = 14,
    /// <summary>
    /// 子弹击中
    /// </summary>
    [pbr::OriginalName("Hit")] Hit = 15,
    /// <summary>
    /// 伤害和玩家列表
    /// </summary>
    [pbr::OriginalName("Damage")] Damage = 16,
    /// <summary>
    /// 死亡
    /// </summary>
    [pbr::OriginalName("Dead")] Dead = 17,
    /// <summary>
    /// 更新玩家所选角色属性
    /// </summary>
    [pbr::OriginalName("CharAttrType")] CharAttrType = 18,
    /// <summary>
    /// 终结技额外伤害
    /// </summary>
    [pbr::OriginalName("UltExtraDamage")] UltExtraDamage = 19,
    /// <summary>
    /// 回复血量
    /// </summary>
    [pbr::OriginalName("Restore")] Restore = 20,
    /// <summary>
    /// 生成回复药品
    /// </summary>
    [pbr::OriginalName("SpawnRestore")] SpawnRestore = 21,
    /// <summary>
    /// 销毁回复药品
    /// </summary>
    [pbr::OriginalName("DestroyRestore")] DestroyRestore = 22,
    /// <summary>
    /// 游戏结束
    /// </summary>
    [pbr::OriginalName("GameOver")] GameOver = 23,
    /// <summary>
    /// 退出登录
    /// </summary>
    [pbr::OriginalName("Logout")] Logout = 24,
  }

  public enum ReturnCode {
    [pbr::OriginalName("ReturnNone")] ReturnNone = 0,
    /// <summary>
    /// 成功
    /// </summary>
    [pbr::OriginalName("Succeed")] Succeed = 1,
    /// <summary>
    /// 失败
    /// </summary>
    [pbr::OriginalName("Fail")] Fail = 2,
    /// <summary>
    /// 账号已登录
    /// </summary>
    [pbr::OriginalName("AlreadyLogin")] AlreadyLogin = 3,
    /// <summary>
    /// 账号已注册
    /// </summary>
    [pbr::OriginalName("AlreadyLogon")] AlreadyLogon = 4,
    /// <summary>
    /// 没有房间
    /// </summary>
    [pbr::OriginalName("NotRoom")] NotRoom = 5,
  }

  public enum MapType {
    [pbr::OriginalName("MapNone")] MapNone = 0,
    /// <summary>
    /// 山脉
    /// </summary>
    [pbr::OriginalName("Forest")] Forest = 1,
    /// <summary>
    /// 黄石
    /// </summary>
    [pbr::OriginalName("Mountain")] Mountain = 2,
    /// <summary>
    /// 森林
    /// </summary>
    [pbr::OriginalName("YellowStone")] YellowStone = 3,
  }

  public enum BulletType {
    [pbr::OriginalName("BulletNone")] BulletNone = 0,
    /// <summary>
    /// 火属性普通攻击
    /// </summary>
    [pbr::OriginalName("FireAttack")] FireAttack = 1,
    /// <summary>
    /// 冰属性普通攻击
    /// </summary>
    [pbr::OriginalName("IceAttack")] IceAttack = 2,
    /// <summary>
    /// 毒属性普通攻击
    /// </summary>
    [pbr::OriginalName("PoisonAttack")] PoisonAttack = 3,
    /// <summary>
    /// 火属性终结技
    /// </summary>
    [pbr::OriginalName("FireUlt")] FireUlt = 4,
    /// <summary>
    /// 冰属性终结技
    /// </summary>
    [pbr::OriginalName("IceUlt")] IceUlt = 5,
    /// <summary>
    /// 毒属性终结技
    /// </summary>
    [pbr::OriginalName("PoisonUlt")] PoisonUlt = 6,
  }

  public enum RestoreType {
    [pbr::OriginalName("RestoreNone")] RestoreNone = 0,
    /// <summary>
    /// 小血瓶
    /// </summary>
    [pbr::OriginalName("SmallBlood")] SmallBlood = 1,
    /// <summary>
    /// 大血瓶
    /// </summary>
    [pbr::OriginalName("BigBlood")] BigBlood = 2,
    /// <summary>
    /// 小蓝瓶
    /// </summary>
    [pbr::OriginalName("SmallBlue")] SmallBlue = 3,
    /// <summary>
    /// 大蓝瓶
    /// </summary>
    [pbr::OriginalName("BigBlue")] BigBlue = 4,
  }

  #endregion

  #region Messages
  public sealed partial class MainPack : pb::IMessage<MainPack> {
    private static readonly pb::MessageParser<MainPack> _parser = new pb::MessageParser<MainPack>(() => new MainPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack(MainPack other) : this() {
      requestcode_ = other.requestcode_;
      actioncode_ = other.actioncode_;
      returncode_ = other.returncode_;
      loginpack_ = other.loginpack_ != null ? other.loginpack_.Clone() : null;
      str_ = other.str_;
      roompack_ = other.roompack_.Clone();
      playerpack_ = other.playerpack_.Clone();
      bulletpack_ = other.bulletpack_ != null ? other.bulletpack_.Clone() : null;
      user_ = other.user_;
      bullethitpack_ = other.bullethitpack_ != null ? other.bullethitpack_.Clone() : null;
      restorebeingspack_ = other.restorebeingspack_.Clone();
      restorepack_ = other.restorepack_ != null ? other.restorepack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack Clone() {
      return new MainPack(this);
    }

    /// <summary>Field number for the "requestcode" field.</summary>
    public const int RequestcodeFieldNumber = 1;
    private global::SocketGameProtocol.RequestCode requestcode_ = global::SocketGameProtocol.RequestCode.RequestNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.RequestCode Requestcode {
      get { return requestcode_; }
      set {
        requestcode_ = value;
      }
    }

    /// <summary>Field number for the "actioncode" field.</summary>
    public const int ActioncodeFieldNumber = 2;
    private global::SocketGameProtocol.ActionCode actioncode_ = global::SocketGameProtocol.ActionCode.ActionNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.ActionCode Actioncode {
      get { return actioncode_; }
      set {
        actioncode_ = value;
      }
    }

    /// <summary>Field number for the "returncode" field.</summary>
    public const int ReturncodeFieldNumber = 3;
    private global::SocketGameProtocol.ReturnCode returncode_ = global::SocketGameProtocol.ReturnCode.ReturnNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.ReturnCode Returncode {
      get { return returncode_; }
      set {
        returncode_ = value;
      }
    }

    /// <summary>Field number for the "loginpack" field.</summary>
    public const int LoginpackFieldNumber = 4;
    private global::SocketGameProtocol.LoginPack loginpack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.LoginPack Loginpack {
      get { return loginpack_; }
      set {
        loginpack_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 5;
    private string str_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roompack" field.</summary>
    public const int RoompackFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SocketGameProtocol.RoomPack> _repeated_roompack_codec
        = pb::FieldCodec.ForMessage(50, global::SocketGameProtocol.RoomPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtocol.RoomPack> roompack_ = new pbc::RepeatedField<global::SocketGameProtocol.RoomPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtocol.RoomPack> Roompack {
      get { return roompack_; }
    }

    /// <summary>Field number for the "playerpack" field.</summary>
    public const int PlayerpackFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SocketGameProtocol.PlayerPack> _repeated_playerpack_codec
        = pb::FieldCodec.ForMessage(58, global::SocketGameProtocol.PlayerPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtocol.PlayerPack> playerpack_ = new pbc::RepeatedField<global::SocketGameProtocol.PlayerPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtocol.PlayerPack> Playerpack {
      get { return playerpack_; }
    }

    /// <summary>Field number for the "bulletpack" field.</summary>
    public const int BulletpackFieldNumber = 8;
    private global::SocketGameProtocol.BulletPack bulletpack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.BulletPack Bulletpack {
      get { return bulletpack_; }
      set {
        bulletpack_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 9;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bullethitpack" field.</summary>
    public const int BullethitpackFieldNumber = 10;
    private global::SocketGameProtocol.BulletHitPack bullethitpack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.BulletHitPack Bullethitpack {
      get { return bullethitpack_; }
      set {
        bullethitpack_ = value;
      }
    }

    /// <summary>Field number for the "restorebeingspack" field.</summary>
    public const int RestorebeingspackFieldNumber = 11;
    private static readonly pb::FieldCodec<global::SocketGameProtocol.RestoreBeingsPack> _repeated_restorebeingspack_codec
        = pb::FieldCodec.ForMessage(90, global::SocketGameProtocol.RestoreBeingsPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtocol.RestoreBeingsPack> restorebeingspack_ = new pbc::RepeatedField<global::SocketGameProtocol.RestoreBeingsPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtocol.RestoreBeingsPack> Restorebeingspack {
      get { return restorebeingspack_; }
    }

    /// <summary>Field number for the "restorepack" field.</summary>
    public const int RestorepackFieldNumber = 12;
    private global::SocketGameProtocol.RestorePack restorepack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.RestorePack Restorepack {
      get { return restorepack_; }
      set {
        restorepack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Requestcode != other.Requestcode) return false;
      if (Actioncode != other.Actioncode) return false;
      if (Returncode != other.Returncode) return false;
      if (!object.Equals(Loginpack, other.Loginpack)) return false;
      if (Str != other.Str) return false;
      if(!roompack_.Equals(other.roompack_)) return false;
      if(!playerpack_.Equals(other.playerpack_)) return false;
      if (!object.Equals(Bulletpack, other.Bulletpack)) return false;
      if (User != other.User) return false;
      if (!object.Equals(Bullethitpack, other.Bullethitpack)) return false;
      if(!restorebeingspack_.Equals(other.restorebeingspack_)) return false;
      if (!object.Equals(Restorepack, other.Restorepack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Requestcode != global::SocketGameProtocol.RequestCode.RequestNone) hash ^= Requestcode.GetHashCode();
      if (Actioncode != global::SocketGameProtocol.ActionCode.ActionNone) hash ^= Actioncode.GetHashCode();
      if (Returncode != global::SocketGameProtocol.ReturnCode.ReturnNone) hash ^= Returncode.GetHashCode();
      if (loginpack_ != null) hash ^= Loginpack.GetHashCode();
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      hash ^= roompack_.GetHashCode();
      hash ^= playerpack_.GetHashCode();
      if (bulletpack_ != null) hash ^= Bulletpack.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (bullethitpack_ != null) hash ^= Bullethitpack.GetHashCode();
      hash ^= restorebeingspack_.GetHashCode();
      if (restorepack_ != null) hash ^= Restorepack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Requestcode != global::SocketGameProtocol.RequestCode.RequestNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Requestcode);
      }
      if (Actioncode != global::SocketGameProtocol.ActionCode.ActionNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Actioncode);
      }
      if (Returncode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Returncode);
      }
      if (loginpack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Loginpack);
      }
      if (Str.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Str);
      }
      roompack_.WriteTo(output, _repeated_roompack_codec);
      playerpack_.WriteTo(output, _repeated_playerpack_codec);
      if (bulletpack_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Bulletpack);
      }
      if (User.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(User);
      }
      if (bullethitpack_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Bullethitpack);
      }
      restorebeingspack_.WriteTo(output, _repeated_restorebeingspack_codec);
      if (restorepack_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Restorepack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Requestcode != global::SocketGameProtocol.RequestCode.RequestNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Requestcode);
      }
      if (Actioncode != global::SocketGameProtocol.ActionCode.ActionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Actioncode);
      }
      if (Returncode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Returncode);
      }
      if (loginpack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loginpack);
      }
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      size += roompack_.CalculateSize(_repeated_roompack_codec);
      size += playerpack_.CalculateSize(_repeated_playerpack_codec);
      if (bulletpack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bulletpack);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (bullethitpack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bullethitpack);
      }
      size += restorebeingspack_.CalculateSize(_repeated_restorebeingspack_codec);
      if (restorepack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Restorepack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainPack other) {
      if (other == null) {
        return;
      }
      if (other.Requestcode != global::SocketGameProtocol.RequestCode.RequestNone) {
        Requestcode = other.Requestcode;
      }
      if (other.Actioncode != global::SocketGameProtocol.ActionCode.ActionNone) {
        Actioncode = other.Actioncode;
      }
      if (other.Returncode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        Returncode = other.Returncode;
      }
      if (other.loginpack_ != null) {
        if (loginpack_ == null) {
          Loginpack = new global::SocketGameProtocol.LoginPack();
        }
        Loginpack.MergeFrom(other.Loginpack);
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      roompack_.Add(other.roompack_);
      playerpack_.Add(other.playerpack_);
      if (other.bulletpack_ != null) {
        if (bulletpack_ == null) {
          Bulletpack = new global::SocketGameProtocol.BulletPack();
        }
        Bulletpack.MergeFrom(other.Bulletpack);
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.bullethitpack_ != null) {
        if (bullethitpack_ == null) {
          Bullethitpack = new global::SocketGameProtocol.BulletHitPack();
        }
        Bullethitpack.MergeFrom(other.Bullethitpack);
      }
      restorebeingspack_.Add(other.restorebeingspack_);
      if (other.restorepack_ != null) {
        if (restorepack_ == null) {
          Restorepack = new global::SocketGameProtocol.RestorePack();
        }
        Restorepack.MergeFrom(other.Restorepack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Requestcode = (global::SocketGameProtocol.RequestCode) input.ReadEnum();
            break;
          }
          case 16: {
            Actioncode = (global::SocketGameProtocol.ActionCode) input.ReadEnum();
            break;
          }
          case 24: {
            Returncode = (global::SocketGameProtocol.ReturnCode) input.ReadEnum();
            break;
          }
          case 34: {
            if (loginpack_ == null) {
              Loginpack = new global::SocketGameProtocol.LoginPack();
            }
            input.ReadMessage(Loginpack);
            break;
          }
          case 42: {
            Str = input.ReadString();
            break;
          }
          case 50: {
            roompack_.AddEntriesFrom(input, _repeated_roompack_codec);
            break;
          }
          case 58: {
            playerpack_.AddEntriesFrom(input, _repeated_playerpack_codec);
            break;
          }
          case 66: {
            if (bulletpack_ == null) {
              Bulletpack = new global::SocketGameProtocol.BulletPack();
            }
            input.ReadMessage(Bulletpack);
            break;
          }
          case 74: {
            User = input.ReadString();
            break;
          }
          case 82: {
            if (bullethitpack_ == null) {
              Bullethitpack = new global::SocketGameProtocol.BulletHitPack();
            }
            input.ReadMessage(Bullethitpack);
            break;
          }
          case 90: {
            restorebeingspack_.AddEntriesFrom(input, _repeated_restorebeingspack_codec);
            break;
          }
          case 98: {
            if (restorepack_ == null) {
              Restorepack = new global::SocketGameProtocol.RestorePack();
            }
            input.ReadMessage(Restorepack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginPack : pb::IMessage<LoginPack> {
    private static readonly pb::MessageParser<LoginPack> _parser = new pb::MessageParser<LoginPack>(() => new LoginPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack(LoginPack other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack Clone() {
      return new LoginPack(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    /// <summary>
    /// 用户名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// 密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPack other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomPack : pb::IMessage<RoomPack> {
    private static readonly pb::MessageParser<RoomPack> _parser = new pb::MessageParser<RoomPack>(() => new RoomPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack(RoomPack other) : this() {
      roomname_ = other.roomname_;
      maxnum_ = other.maxnum_;
      curnum_ = other.curnum_;
      state_ = other.state_;
      maptype_ = other.maptype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack Clone() {
      return new RoomPack(this);
    }

    /// <summary>Field number for the "roomname" field.</summary>
    public const int RoomnameFieldNumber = 1;
    private string roomname_ = "";
    /// <summary>
    /// 房间名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Roomname {
      get { return roomname_; }
      set {
        roomname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxnum" field.</summary>
    public const int MaxnumFieldNumber = 2;
    private int maxnum_;
    /// <summary>
    /// 房间最大人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Maxnum {
      get { return maxnum_; }
      set {
        maxnum_ = value;
      }
    }

    /// <summary>Field number for the "curnum" field.</summary>
    public const int CurnumFieldNumber = 3;
    private int curnum_;
    /// <summary>
    /// 房间当前人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Curnum {
      get { return curnum_; }
      set {
        curnum_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private int state_;
    /// <summary>
    /// 房间状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "maptype" field.</summary>
    public const int MaptypeFieldNumber = 5;
    private global::SocketGameProtocol.MapType maptype_ = global::SocketGameProtocol.MapType.MapNone;
    /// <summary>
    /// 地图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.MapType Maptype {
      get { return maptype_; }
      set {
        maptype_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomname != other.Roomname) return false;
      if (Maxnum != other.Maxnum) return false;
      if (Curnum != other.Curnum) return false;
      if (State != other.State) return false;
      if (Maptype != other.Maptype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Roomname.Length != 0) hash ^= Roomname.GetHashCode();
      if (Maxnum != 0) hash ^= Maxnum.GetHashCode();
      if (Curnum != 0) hash ^= Curnum.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (Maptype != global::SocketGameProtocol.MapType.MapNone) hash ^= Maptype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Roomname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Roomname);
      }
      if (Maxnum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Maxnum);
      }
      if (Curnum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Curnum);
      }
      if (State != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(State);
      }
      if (Maptype != global::SocketGameProtocol.MapType.MapNone) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Maptype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Roomname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomname);
      }
      if (Maxnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maxnum);
      }
      if (Curnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Curnum);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (Maptype != global::SocketGameProtocol.MapType.MapNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Maptype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPack other) {
      if (other == null) {
        return;
      }
      if (other.Roomname.Length != 0) {
        Roomname = other.Roomname;
      }
      if (other.Maxnum != 0) {
        Maxnum = other.Maxnum;
      }
      if (other.Curnum != 0) {
        Curnum = other.Curnum;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Maptype != global::SocketGameProtocol.MapType.MapNone) {
        Maptype = other.Maptype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomname = input.ReadString();
            break;
          }
          case 16: {
            Maxnum = input.ReadInt32();
            break;
          }
          case 24: {
            Curnum = input.ReadInt32();
            break;
          }
          case 32: {
            State = input.ReadInt32();
            break;
          }
          case 40: {
            Maptype = (global::SocketGameProtocol.MapType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerPack : pb::IMessage<PlayerPack> {
    private static readonly pb::MessageParser<PlayerPack> _parser = new pb::MessageParser<PlayerPack>(() => new PlayerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack(PlayerPack other) : this() {
      playername_ = other.playername_;
      playerID_ = other.playerID_;
      hp_ = other.hp_;
      pospack_ = other.pospack_ != null ? other.pospack_.Clone() : null;
      spawnPos_ = other.spawnPos_;
      charAttrType_ = other.charAttrType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack Clone() {
      return new PlayerPack(this);
    }

    /// <summary>Field number for the "playername" field.</summary>
    public const int PlayernameFieldNumber = 1;
    private string playername_ = "";
    /// <summary>
    /// 玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Playername {
      get { return playername_; }
      set {
        playername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 2;
    private string playerID_ = "";
    /// <summary>
    /// 玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    /// <summary>
    /// 玩家血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "pospack" field.</summary>
    public const int PospackFieldNumber = 4;
    private global::SocketGameProtocol.PosPack pospack_;
    /// <summary>
    /// 位置信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.PosPack Pospack {
      get { return pospack_; }
      set {
        pospack_ = value;
      }
    }

    /// <summary>Field number for the "SpawnPos" field.</summary>
    public const int SpawnPosFieldNumber = 5;
    private int spawnPos_;
    /// <summary>
    /// 玩家出生点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpawnPos {
      get { return spawnPos_; }
      set {
        spawnPos_ = value;
      }
    }

    /// <summary>Field number for the "CharAttrType" field.</summary>
    public const int CharAttrTypeFieldNumber = 6;
    private int charAttrType_;
    /// <summary>
    /// 玩家所选角色的属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharAttrType {
      get { return charAttrType_; }
      set {
        charAttrType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Playername != other.Playername) return false;
      if (PlayerID != other.PlayerID) return false;
      if (Hp != other.Hp) return false;
      if (!object.Equals(Pospack, other.Pospack)) return false;
      if (SpawnPos != other.SpawnPos) return false;
      if (CharAttrType != other.CharAttrType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Playername.Length != 0) hash ^= Playername.GetHashCode();
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (pospack_ != null) hash ^= Pospack.GetHashCode();
      if (SpawnPos != 0) hash ^= SpawnPos.GetHashCode();
      if (CharAttrType != 0) hash ^= CharAttrType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Playername.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Playername);
      }
      if (PlayerID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerID);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (pospack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pospack);
      }
      if (SpawnPos != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SpawnPos);
      }
      if (CharAttrType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CharAttrType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Playername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Playername);
      }
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (pospack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pospack);
      }
      if (SpawnPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpawnPos);
      }
      if (CharAttrType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharAttrType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPack other) {
      if (other == null) {
        return;
      }
      if (other.Playername.Length != 0) {
        Playername = other.Playername;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.pospack_ != null) {
        if (pospack_ == null) {
          Pospack = new global::SocketGameProtocol.PosPack();
        }
        Pospack.MergeFrom(other.Pospack);
      }
      if (other.SpawnPos != 0) {
        SpawnPos = other.SpawnPos;
      }
      if (other.CharAttrType != 0) {
        CharAttrType = other.CharAttrType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Playername = input.ReadString();
            break;
          }
          case 18: {
            PlayerID = input.ReadString();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 34: {
            if (pospack_ == null) {
              Pospack = new global::SocketGameProtocol.PosPack();
            }
            input.ReadMessage(Pospack);
            break;
          }
          case 40: {
            SpawnPos = input.ReadInt32();
            break;
          }
          case 48: {
            CharAttrType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PosPack : pb::IMessage<PosPack> {
    private static readonly pb::MessageParser<PosPack> _parser = new pb::MessageParser<PosPack>(() => new PosPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PosPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack(PosPack other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      rotX_ = other.rotX_;
      rotY_ = other.rotY_;
      rotZ_ = other.rotZ_;
      moveSpeed_ = other.moveSpeed_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack Clone() {
      return new PosPack(this);
    }

    /// <summary>Field number for the "PosX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "PosY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "PosZ" field.</summary>
    public const int PosZFieldNumber = 3;
    private float posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosZ {
      get { return posZ_; }
      set {
        posZ_ = value;
      }
    }

    /// <summary>Field number for the "RotX" field.</summary>
    public const int RotXFieldNumber = 4;
    private float rotX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotX {
      get { return rotX_; }
      set {
        rotX_ = value;
      }
    }

    /// <summary>Field number for the "RotY" field.</summary>
    public const int RotYFieldNumber = 5;
    private float rotY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotY {
      get { return rotY_; }
      set {
        rotY_ = value;
      }
    }

    /// <summary>Field number for the "RotZ" field.</summary>
    public const int RotZFieldNumber = 6;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    /// <summary>Field number for the "MoveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 7;
    private float moveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 8;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PosPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PosPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosZ, other.PosZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotX, other.RotX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotY, other.RotY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoveSpeed, other.MoveSpeed)) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (PosZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosZ);
      if (RotX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotX);
      if (RotY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotY);
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (MoveSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoveSpeed);
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (PosZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PosZ);
      }
      if (RotX != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RotX);
      }
      if (RotY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(RotY);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(RotZ);
      }
      if (MoveSpeed != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(MoveSpeed);
      }
      if (State.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (PosZ != 0F) {
        size += 1 + 4;
      }
      if (RotX != 0F) {
        size += 1 + 4;
      }
      if (RotY != 0F) {
        size += 1 + 4;
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (MoveSpeed != 0F) {
        size += 1 + 4;
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PosPack other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.PosZ != 0F) {
        PosZ = other.PosZ;
      }
      if (other.RotX != 0F) {
        RotX = other.RotX;
      }
      if (other.RotY != 0F) {
        RotY = other.RotY;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      if (other.MoveSpeed != 0F) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
          case 29: {
            PosZ = input.ReadFloat();
            break;
          }
          case 37: {
            RotX = input.ReadFloat();
            break;
          }
          case 45: {
            RotY = input.ReadFloat();
            break;
          }
          case 53: {
            RotZ = input.ReadFloat();
            break;
          }
          case 61: {
            MoveSpeed = input.ReadFloat();
            break;
          }
          case 66: {
            State = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulletPack : pb::IMessage<BulletPack> {
    private static readonly pb::MessageParser<BulletPack> _parser = new pb::MessageParser<BulletPack>(() => new BulletPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulletPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletPack(BulletPack other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      rotX_ = other.rotX_;
      rotY_ = other.rotY_;
      bullettype_ = other.bullettype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletPack Clone() {
      return new BulletPack(this);
    }

    /// <summary>Field number for the "PosX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "PosY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "PosZ" field.</summary>
    public const int PosZFieldNumber = 3;
    private float posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosZ {
      get { return posZ_; }
      set {
        posZ_ = value;
      }
    }

    /// <summary>Field number for the "RotX" field.</summary>
    public const int RotXFieldNumber = 4;
    private float rotX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotX {
      get { return rotX_; }
      set {
        rotX_ = value;
      }
    }

    /// <summary>Field number for the "RotY" field.</summary>
    public const int RotYFieldNumber = 5;
    private float rotY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotY {
      get { return rotY_; }
      set {
        rotY_ = value;
      }
    }

    /// <summary>Field number for the "bullettype" field.</summary>
    public const int BullettypeFieldNumber = 6;
    private global::SocketGameProtocol.BulletType bullettype_ = global::SocketGameProtocol.BulletType.BulletNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.BulletType Bullettype {
      get { return bullettype_; }
      set {
        bullettype_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulletPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulletPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosZ, other.PosZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotX, other.RotX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotY, other.RotY)) return false;
      if (Bullettype != other.Bullettype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (PosZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosZ);
      if (RotX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotX);
      if (RotY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotY);
      if (Bullettype != global::SocketGameProtocol.BulletType.BulletNone) hash ^= Bullettype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (PosZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PosZ);
      }
      if (RotX != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RotX);
      }
      if (RotY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(RotY);
      }
      if (Bullettype != global::SocketGameProtocol.BulletType.BulletNone) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Bullettype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (PosZ != 0F) {
        size += 1 + 4;
      }
      if (RotX != 0F) {
        size += 1 + 4;
      }
      if (RotY != 0F) {
        size += 1 + 4;
      }
      if (Bullettype != global::SocketGameProtocol.BulletType.BulletNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Bullettype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulletPack other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.PosZ != 0F) {
        PosZ = other.PosZ;
      }
      if (other.RotX != 0F) {
        RotX = other.RotX;
      }
      if (other.RotY != 0F) {
        RotY = other.RotY;
      }
      if (other.Bullettype != global::SocketGameProtocol.BulletType.BulletNone) {
        Bullettype = other.Bullettype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
          case 29: {
            PosZ = input.ReadFloat();
            break;
          }
          case 37: {
            RotX = input.ReadFloat();
            break;
          }
          case 45: {
            RotY = input.ReadFloat();
            break;
          }
          case 48: {
            Bullettype = (global::SocketGameProtocol.BulletType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulletHitPack : pb::IMessage<BulletHitPack> {
    private static readonly pb::MessageParser<BulletHitPack> _parser = new pb::MessageParser<BulletHitPack>(() => new BulletHitPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulletHitPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletHitPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletHitPack(BulletHitPack other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      hituser_ = other.hituser_;
      bullettype_ = other.bullettype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletHitPack Clone() {
      return new BulletHitPack(this);
    }

    /// <summary>Field number for the "PosX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "PosY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "PosZ" field.</summary>
    public const int PosZFieldNumber = 3;
    private float posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosZ {
      get { return posZ_; }
      set {
        posZ_ = value;
      }
    }

    /// <summary>Field number for the "Hituser" field.</summary>
    public const int HituserFieldNumber = 4;
    private string hituser_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hituser {
      get { return hituser_; }
      set {
        hituser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bullettype" field.</summary>
    public const int BullettypeFieldNumber = 5;
    private global::SocketGameProtocol.BulletType bullettype_ = global::SocketGameProtocol.BulletType.BulletNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.BulletType Bullettype {
      get { return bullettype_; }
      set {
        bullettype_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulletHitPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulletHitPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosZ, other.PosZ)) return false;
      if (Hituser != other.Hituser) return false;
      if (Bullettype != other.Bullettype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (PosZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosZ);
      if (Hituser.Length != 0) hash ^= Hituser.GetHashCode();
      if (Bullettype != global::SocketGameProtocol.BulletType.BulletNone) hash ^= Bullettype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (PosZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PosZ);
      }
      if (Hituser.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Hituser);
      }
      if (Bullettype != global::SocketGameProtocol.BulletType.BulletNone) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Bullettype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (PosZ != 0F) {
        size += 1 + 4;
      }
      if (Hituser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hituser);
      }
      if (Bullettype != global::SocketGameProtocol.BulletType.BulletNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Bullettype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulletHitPack other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.PosZ != 0F) {
        PosZ = other.PosZ;
      }
      if (other.Hituser.Length != 0) {
        Hituser = other.Hituser;
      }
      if (other.Bullettype != global::SocketGameProtocol.BulletType.BulletNone) {
        Bullettype = other.Bullettype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
          case 29: {
            PosZ = input.ReadFloat();
            break;
          }
          case 34: {
            Hituser = input.ReadString();
            break;
          }
          case 40: {
            Bullettype = (global::SocketGameProtocol.BulletType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RestoreBeingsPack : pb::IMessage<RestoreBeingsPack> {
    private static readonly pb::MessageParser<RestoreBeingsPack> _parser = new pb::MessageParser<RestoreBeingsPack>(() => new RestoreBeingsPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestoreBeingsPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreBeingsPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreBeingsPack(RestoreBeingsPack other) : this() {
      index_ = other.index_;
      restoretype_ = other.restoretype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreBeingsPack Clone() {
      return new RestoreBeingsPack(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    /// <summary>
    /// 药品编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "restoretype" field.</summary>
    public const int RestoretypeFieldNumber = 2;
    private global::SocketGameProtocol.RestoreType restoretype_ = global::SocketGameProtocol.RestoreType.RestoreNone;
    /// <summary>
    /// 回复材料类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.RestoreType Restoretype {
      get { return restoretype_; }
      set {
        restoretype_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestoreBeingsPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestoreBeingsPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Restoretype != other.Restoretype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Restoretype != global::SocketGameProtocol.RestoreType.RestoreNone) hash ^= Restoretype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Restoretype != global::SocketGameProtocol.RestoreType.RestoreNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Restoretype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Restoretype != global::SocketGameProtocol.RestoreType.RestoreNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Restoretype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestoreBeingsPack other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Restoretype != global::SocketGameProtocol.RestoreType.RestoreNone) {
        Restoretype = other.Restoretype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Restoretype = (global::SocketGameProtocol.RestoreType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RestorePack : pb::IMessage<RestorePack> {
    private static readonly pb::MessageParser<RestorePack> _parser = new pb::MessageParser<RestorePack>(() => new RestorePack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestorePack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestorePack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestorePack(RestorePack other) : this() {
      user_ = other.user_;
      restoretype_ = other.restoretype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestorePack Clone() {
      return new RestorePack(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private string user_ = "";
    /// <summary>
    /// 回复对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "restoretype" field.</summary>
    public const int RestoretypeFieldNumber = 2;
    private global::SocketGameProtocol.RestoreType restoretype_ = global::SocketGameProtocol.RestoreType.RestoreNone;
    /// <summary>
    /// 回复材料类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.RestoreType Restoretype {
      get { return restoretype_; }
      set {
        restoretype_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestorePack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestorePack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (User != other.User) return false;
      if (Restoretype != other.Restoretype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Restoretype != global::SocketGameProtocol.RestoreType.RestoreNone) hash ^= Restoretype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (User.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(User);
      }
      if (Restoretype != global::SocketGameProtocol.RestoreType.RestoreNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Restoretype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Restoretype != global::SocketGameProtocol.RestoreType.RestoreNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Restoretype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestorePack other) {
      if (other == null) {
        return;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Restoretype != global::SocketGameProtocol.RestoreType.RestoreNone) {
        Restoretype = other.Restoretype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            User = input.ReadString();
            break;
          }
          case 16: {
            Restoretype = (global::SocketGameProtocol.RestoreType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
